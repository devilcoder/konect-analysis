#! /bin/sh
#
# Get the group of a statistic, i.e., the string describing the set
# of networks that apply to it.
#
# If statistic is of the form [a-z]+\+[0-9]+, only the part left of the
# underscore is used. 
#
# INVOCATION 
#	$0 $STATISTIC
#
# INPUT FILES
#	konect-toolbox/m/konect_statistic_$statistic_base.m 
#
# STDOUT
#	The group name is output.  Nothing is output when no group is
#	known. 
#

if [ -z "$1" ] ; then
	echo >&2 "*** $0:  first argument missing"
	exit 1
fi

statistic="$1"

statistic_base="$(echo "$statistic" | sed -E -e 's,\+[0-9]+$,,')"
suffix="$(echo "$statistic" | sed -E -e 's,^.*\+,+,;t;d')"

file="konect-toolbox/m/konect_statistic_$statistic_base.m"

if [ ! -e "$file" ] ; then
	echo >&2 "*** $0:  file '$file' not found"
	exit 1
fi

suffix_regexp="$(echo "$suffix" | sed -E -e 's,\+,\\+,')"

{
	# Take the first non-empty of the following two:

	# Substatistic-specific group
	sed -E -e 's,^.*GROUP'"$suffix_regexp"'\s*:\s*([^ 	]+)\s*$,\1,;t;;d' "$file" | 
	tr a-z A-Z

	# Statistic-specific group
	sed -E -e 's,^.*GROUP\s*:\s*([^ 	]+)\s*$,\1,;t;;d' "$file" | 
	tr a-z A-Z
} |
sed -E -e '/^\s*$/d' | sed -E -e '1!d'

exit 0
