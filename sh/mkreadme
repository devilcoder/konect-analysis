#! /usr/bin/perl
#
# Prints a readme file for the website to stdoud, which should accompany
# the tarballs.  
#
# INVOCATION
#
#	$0 <network> <matrices|code|full>
#

use strict;
use warnings;

use HTML::Entities;

my $network = $ARGV[0];

sub has_timestamps {
	open my $F_DATASETS, "<dat/networks.list" or die "$!";
	my @lines = <$F_DATASETS>;
	close $F_DATASETS or die "$!";
	foreach my $line (@lines) {
		my @info = split(/ /, $line );
		if ( uc( $info[0] ) eq uc($network) ) {
			chomp $info[3];
			return $info[3];
		}
	}
}



open (my $F_IN,"<uni/meta.$network") or die "could not open uni/meta.$network: $!\n";

my $name= "";
my $description= ""; 

while (my $line= <$F_IN>) {
	if ($line =~ /\s*name\s*:\s*(.*)\s*$/) {
		unless ($name ne "") {
			$name= $1;
		}
	}
	if ($line =~ /\s*fullname\s*:\s*(.*)\s*$/) {
		$name= $1;
	}
	if ($line=~/\s*long-description\s*:\s*(.*)\s*$/) {
		$description= $1;
	}
}

close $F_IN or die "$!";

if ( $ARGV[1] eq "code" ) {
	print ""
	    . "The files in this directory are used to generate the TSV files of the "
	    . $ARGV[0]
	    . " network,
about which more information is provided there: http://konect.cc/networks/"
. $ARGV[0] ; 
}
elsif ( $ARGV[1] eq "matrices" ) {
    HTML::Entities::decode($description);
    print $name;
    print " network, part of the Koblenz Network Collection
===========================================================================

This directory contains the TSV and related files of the "
      . $ARGV[0]
      . " network: " .

$description . "


More information about the network is provided here: 
http://konect.cc/networks/" . $ARGV[0] . "

Files: 
    meta." . $ARGV[0] . " -- Metadata about the network 
    out."
      . $ARGV[0]
      . " -- The adjacency matrix of the network in whitespace-separated values format, with one edge per line\n";

    print "      The meaning of the columns in out." . $ARGV[0] . " are: 
        First column: ID of from node 
        Second column: ID of to node
        Third column (if present): weight or multiplicity of edge
        Fourth column (if present):  timestamp of edges Unix time\n";

    open F_INFO, "<dat/info.$network";
    my @lines = <F_INFO>;
    close F_INFO;
    if ( $lines[5] > 1 ) {
        print "        Third column: edge weight\n";
    }
    if ( has_timestamps() ) {
        print "        Fourth column: timestamp of the edge\n";
    }

########################### entity files
    opendir( DIR, "uni" ) or die "$!";
    my @FILES= readdir(DIR);
    foreach my $file (@FILES) {
        if ($file =~ /^ent\.$network\.([^\.]*)\.([^\.]*)$/) {
            print
		"    $file -- Contains the attribute `$2` of entity `$1` of the network\n";
        }
    }
#########################

    #todo: add these optional lines and make them optional. :P
    #		Third column: edge weight
    #		Fourth column: timestamp of the edge (OPTIONAL)
    print "

Use the following References for citation:

";
	
    system("PERL5LIB=".$ENV{"PERL5LIB"}." sh/mkcite $network") == 0  or die "mkcite: $!";
    print "\n";
    system("PERL5LIB=".$ENV{"PERL5LIB"}." sh/mkcite konect") == 0  or die "mkcite: $!";
    print "\n";
} elsif ( $ARGV[1] eq "full" ) {
    print ""
      . "This folder contains the full datasets from which the TSV files of "
      . $ARGV[0]
      . " network are extracted.
Use the related extraction code for that matter.
"

}
